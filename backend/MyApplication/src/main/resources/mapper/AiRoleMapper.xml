<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.companion.mapper.AiRoleMapper">
    <resultMap id="AiRoleResultMap" type="com.ai.companion.entity.AiRole">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleDescription" column="role_description"/>
        <result property="roleType" column="role_type"/>
        <result property="roleAuthor" column="role_author"/>
        <result property="viewCount" column="view_count"/>
        <result property="avatarUrl" column="avatar_url"/>
        <result property="isTemplate" column="is_template"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <select id="selectById" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles WHERE id = #{id}
    </select>

    <select id="selectByUserId" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles WHERE user_id = #{userId}
    </select>

    <select id="selectByRoleType" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_type = #{roleType}
        ORDER BY view_count DESC, created_at DESC
    </select>

    <select id="selectByRoleAuthor" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles WHERE role_author = #{roleAuthor}
    </select>

    <select id="selectHotRoles" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        ORDER BY view_count DESC, created_at DESC
        LIMIT #{limit}
    </select>

    <insert id="insertAiRole" parameterType="com.ai.companion.entity.AiRole" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO ai_roles (user_id, role_name, role_description, role_type, role_author, view_count, avatar_url, is_template, created_at)
        VALUES (#{userId}, #{roleName}, #{roleDescription}, #{roleType}, #{roleAuthor}, #{viewCount}, #{avatarUrl}, #{isTemplate}, #{createdAt})
    </insert>

    <update id="updateAiRole" parameterType="com.ai.companion.entity.AiRole">
        UPDATE ai_roles
        SET user_id=#{userId}, role_name=#{roleName}, role_description=#{roleDescription}, 
            role_type=#{roleType}, role_author=#{roleAuthor}, view_count=#{viewCount},
            avatar_url=#{avatarUrl}, is_template=#{isTemplate}, created_at=#{createdAt}
        WHERE id=#{id}
    </update>

    <delete id="deleteAiRole">
        DELETE FROM ai_roles WHERE id=#{id}
    </delete>

    <select id="selectAll" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles
    </select>

    <update id="incrementViewCount">
        UPDATE ai_roles SET view_count = view_count + 1 WHERE id = #{id}
    </update>

    <update id="updateViewCount">
        UPDATE ai_roles SET view_count = #{viewCount} WHERE id = #{id}
    </update>

    <select id="selectByPage" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectByRoleNameLike" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_name LIKE CONCAT('%', #{roleName}, '%')
        ORDER BY created_at DESC
    </select>

    <select id="selectByRoleDescriptionLike" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_description LIKE CONCAT('%', #{roleDescription}, '%')
        ORDER BY created_at DESC
    </select>

    <select id="selectByConditions" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        <where>
            <if test="roleType != null and roleType != ''">
                AND role_type = #{roleType}
            </if>
            <if test="roleAuthor != null and roleAuthor != ''">
                AND role_author = #{roleAuthor}
            </if>
            <if test="isTemplate != null">
                AND is_template = #{isTemplate}
            </if>
            <if test="minViewCount != null">
                AND view_count >= #{minViewCount}
            </if>
        </where>
        ORDER BY created_at DESC
    </select>

    <select id="selectLatestRoles" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        ORDER BY created_at DESC
        LIMIT #{limit}
    </select>

    <select id="selectTemplateRolesByUserId" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE user_id = #{userId} AND is_template = true
        ORDER BY created_at DESC
    </select>

    <select id="selectSystemRoles" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_type = 'system'
        ORDER BY created_at DESC
    </select>

    <select id="selectCommunityRoles" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_type = 'community'
        ORDER BY view_count DESC, created_at DESC
        LIMIT #{limit}
    </select>

    <select id="selectByCreateTimeRange" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE created_at BETWEEN #{startTime} AND #{endTime}
        ORDER BY created_at DESC
    </select>

    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM ai_roles WHERE user_id = #{userId}
    </select>

    <select id="countByRoleType" resultType="int">
        SELECT COUNT(*) FROM ai_roles WHERE role_type = #{roleType}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM ai_roles
    </select>

    <select id="getAverageViewCount" resultType="double">
        SELECT AVG(view_count) FROM ai_roles
    </select>

    <delete id="batchDeleteRoles">
        DELETE FROM ai_roles WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="batchUpdateRoleType">
        UPDATE ai_roles SET role_type = #{roleType} WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="existsByRoleName" resultType="boolean">
        SELECT COUNT(*) > 0 FROM ai_roles 
        WHERE role_name = #{roleName}
        <if test="excludeId != null">
            AND id != #{excludeId}
        </if>
    </select>

    <select id="selectByIds" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        ORDER BY created_at DESC
    </select>

    <select id="selectPopularRolesByUserId" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE user_id = #{userId}
        ORDER BY view_count DESC, created_at DESC
        LIMIT #{limit}
    </select>

    <select id="searchRoles" resultMap="AiRoleResultMap">
        SELECT * FROM ai_roles 
        WHERE role_name LIKE CONCAT('%', #{keyword}, '%')
           OR role_description LIKE CONCAT('%', #{keyword}, '%')
           OR role_author LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY 
            CASE 
                WHEN role_name LIKE CONCAT('%', #{keyword}, '%') THEN 1
                WHEN role_description LIKE CONCAT('%', #{keyword}, '%') THEN 2
                ELSE 3
            END,
            view_count DESC,
            created_at DESC
        LIMIT #{limit}
    </select>
</mapper> 