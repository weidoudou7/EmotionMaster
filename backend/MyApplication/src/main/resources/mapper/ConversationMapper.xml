<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ai.companion.mapper.ConversationMapper">
    <resultMap id="ConversationResultMap" type="com.ai.companion.entity.Conversation">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="aiRoleId" column="ai_role_id"/>
        <result property="turns" column="turns"/>
        <result property="title" column="title"/>
        <result property="startTime" column="start_time"/>
        <result property="lastActive" column="last_active"/>
        <result property="moodTag" column="mood_tag"/>
    </resultMap>

    <select id="selectById" resultMap="ConversationResultMap">
        SELECT * FROM conversations WHERE id = #{id}
    </select>

    <select id="selectByUserId" resultMap="ConversationResultMap">
        SELECT * FROM conversations WHERE user_id = #{userId}
    </select>

    <select id="selectByAiRoleId" resultMap="ConversationResultMap">
        SELECT * FROM conversations WHERE ai_role_id = #{aiRoleId}
    </select>

    <select id="selectByUserIdAndAiRoleId" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE user_id = #{userId} AND ai_role_id = #{aiRoleId}
        LIMIT 1
    </select>

    <select id="selectAll" resultMap="ConversationResultMap">
        SELECT * FROM conversations
    </select>

    <select id="selectByPage" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        ORDER BY last_active DESC 
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectByUserIdWithPage" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE user_id = #{userId}
        ORDER BY last_active DESC 
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="selectLatestByUserId" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE user_id = #{userId}
        ORDER BY start_time DESC 
        LIMIT #{limit}
    </select>

    <select id="selectMostActive" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        ORDER BY last_active DESC 
        LIMIT #{limit}
    </select>

    <select id="selectByMoodTag" resultMap="ConversationResultMap">
        SELECT * FROM conversations WHERE mood_tag = #{moodTag}
    </select>

    <select id="selectByTurnsRange" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE turns BETWEEN #{minTurns} AND #{maxTurns}
    </select>

    <select id="selectByConditions" resultMap="ConversationResultMap">
        SELECT * FROM conversations
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="aiRoleId != null">
                AND ai_role_id = #{aiRoleId}
            </if>
            <if test="moodTag != null and moodTag != ''">
                AND mood_tag = #{moodTag}
            </if>
            <if test="minTurns != null">
                AND turns &gt;= #{minTurns}
            </if>
            <if test="maxTurns != null">
                AND turns &lt;= #{maxTurns}
            </if>
        </where>
        ORDER BY last_active DESC
    </select>

    <select id="selectByStartTimeRange" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE start_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY start_time DESC
    </select>

    <select id="selectByLastActiveRange" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE last_active BETWEEN #{startTime} AND #{endTime}
        ORDER BY last_active DESC
    </select>

    <select id="selectTodayActive" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE DATE(last_active) = CURDATE()
        ORDER BY last_active DESC
    </select>

    <select id="selectThisWeekActive" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE YEARWEEK(last_active) = YEARWEEK(NOW())
        ORDER BY last_active DESC
    </select>

    <select id="searchConversations" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE title LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY last_active DESC 
        LIMIT #{limit}
    </select>

    <select id="selectByIds" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="selectByUserIds" resultMap="ConversationResultMap">
        SELECT * FROM conversations 
        WHERE user_id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <insert id="insertConversation" parameterType="com.ai.companion.entity.Conversation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO conversations (user_id, ai_role_id, turns, title, start_time, last_active, mood_tag)
        VALUES (#{userId}, #{aiRoleId}, #{turns}, #{title}, #{startTime}, #{lastActive}, #{moodTag})
    </insert>

    <update id="updateConversation" parameterType="com.ai.companion.entity.Conversation">
        UPDATE conversations
        SET user_id = #{userId}, ai_role_id = #{aiRoleId}, turns = #{turns}, title = #{title}, 
            start_time = #{startTime}, last_active = #{lastActive}, mood_tag = #{moodTag}
        WHERE id = #{id}
    </update>

    <update id="updateLastActive">
        UPDATE conversations 
        SET last_active = NOW() 
        WHERE id = #{id}
    </update>

    <update id="updateTurns">
        UPDATE conversations 
        SET turns = #{turns} 
        WHERE id = #{id}
    </update>

    <update id="updateTitle">
        UPDATE conversations 
        SET title = #{title} 
        WHERE id = #{id}
    </update>

    <update id="updateMoodTag">
        UPDATE conversations 
        SET mood_tag = #{moodTag} 
        WHERE id = #{id}
    </update>

    <delete id="deleteConversation">
        DELETE FROM conversations WHERE id = #{id}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM conversations WHERE user_id = #{userId}
    </delete>

    <delete id="batchDeleteConversations">
        DELETE FROM conversations 
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="existsById" resultType="boolean">
        SELECT COUNT(*) > 0 FROM conversations WHERE id = #{id}
    </select>

    <select id="existsByUserIdAndAiRoleId" resultType="boolean">
        SELECT COUNT(*) > 0 FROM conversations 
        WHERE user_id = #{userId} AND ai_role_id = #{aiRoleId}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM conversations
    </select>

    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM conversations WHERE user_id = #{userId}
    </select>

    <select id="countByAiRoleId" resultType="int">
        SELECT COUNT(*) FROM conversations WHERE ai_role_id = #{aiRoleId}
    </select>

    <select id="countTodayCreated" resultType="int">
        SELECT COUNT(*) FROM conversations 
        WHERE DATE(start_time) = CURDATE()
    </select>

    <select id="countTodayActive" resultType="int">
        SELECT COUNT(*) FROM conversations 
        WHERE DATE(last_active) = CURDATE()
    </select>

    <select id="getAverageTurns" resultType="double">
        SELECT AVG(turns) FROM conversations
    </select>

    <select id="selectMoodTagDistribution" resultMap="ConversationResultMap">
        SELECT mood_tag, COUNT(*) as count 
        FROM conversations 
        GROUP BY mood_tag 
        ORDER BY count DESC 
        LIMIT 20
    </select>
</mapper> 